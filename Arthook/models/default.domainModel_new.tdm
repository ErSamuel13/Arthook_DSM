ConceptualModel Arthook 
{
	Class Usuario  alias Usuario 
	{
		attributes
		{
			private oid  id alias idUsuario : Autogenerated;
			private  nombre alias nombre : String;
			private  email alias email : String;
			private  nickname alias nickname : String;
			private  password alias password : Password;
			private  telefono alias telefono : String;
			private  tipoUsuario alias tipoUsuario : TipoUsuario;
		}
		
		operations
		{
			public new::New (p_nombre : String, p_email : String, p_nickname : String, p_password : Password, p_telefono : String, p_mensajeE : List< OID->Mensaje >, p_mensajeR : List< OID->Mensaje >, p_publicacion : OID->Publicacion, p_tarifa : OID->Tarifa, p_valoracion : OID->Valoracion, p_tipoUsuario : TipoUsuario) : Object->Usuario;
			public modify::Modifier (p_Usuario_OID : OID->Usuario, p_nombre : String, p_email : String, p_nickname : String, p_password : Password, p_telefono : String, p_tipoUsuario : TipoUsuario) : Void;
			public destroy::Destroy (p_Usuario_OID : OID->Usuario) : Void;
			public readOID::ReadOID (p_Usuario_OID : OID->Usuario) : Object->Usuario;
			public readAll::ReadAll () : List<Object->Usuario>;
		}
	};
	
	Class Publicacion  alias Publicacion 
	{
		attributes
		{
			private oid  id alias idPublicacion : Autogenerated;
			private  pvp alias pvp : Float;
			private  tipo alias tipo : TipoProd;
			private  descripcion alias descripcion : String;
			private  valoracionMedia alias valoracionMedia : Float;
			private  titulo alias titulo : String;
			private  tipoPubli alias tipoPubli : TipoPublicacion;
		}
		
		operations
		{
			public new::New (p_tipo : TipoProd, p_descripcion : String, p_valoracionMedia : Float, p_titulo : String, p_valoracion : OID->Valoracion) : Object->Publicacion;
			public modify::Modifier (p_Publicacion_OID : OID->Publicacion, p_tipo : TipoProd, p_descripcion : String, p_valoracionMedia : Float, p_titulo : String) : Void;
			public destroy::Destroy (p_Publicacion_OID : OID->Publicacion) : Void;
			public readOID::ReadOID (p_Publicacion_OID : OID->Publicacion) : Object->Publicacion;
			public readAll::ReadAll () : List<Object->Publicacion>;
		}
	};
	
	Class Pedido  alias Pedido 
	{
		attributes
		{
			private oid  id alias idPedido : Autogenerated;
			private  fecha alias fecha : Date;
			private  precioTotal alias precioTotal : Float;
			private  estado alias estado : Estado;
			private  attribute alias attribute : String;
		}
		
		operations
		{
			public new::New (p_fecha : Date, p_precioTotal : Float, p_estado : Estado, p_attribute : String, p_usuario : OID->Usuario, p_metodoPago : OID->MetodoPago) : Object->Pedido;
			public modify::Modifier (p_Pedido_OID : OID->Pedido, p_fecha : Date, p_precioTotal : Float, p_estado : Estado, p_attribute : String) : Void;
			public destroy::Destroy (p_Pedido_OID : OID->Pedido) : Void;
			public readOID::ReadOID (p_Pedido_OID : OID->Pedido) : Object->Pedido;
			public readAll::ReadAll () : List<Object->Pedido>;
		}
	};
	
	Class LinPed  alias LinPed 
	{
		attributes
		{
			private oid  id alias idLinPed : Autogenerated;
			private  Cantidad alias Cantidad : Integer;
			private  precio alias precio : Float;
		}
		
		operations
		{
			public new::New (p_Cantidad : Integer, p_precio : Float, p_pedido : OID->Pedido, p_publicacion : OID->Publicacion) : Object->LinPed;
			public modify::Modifier (p_LinPed_OID : OID->LinPed, p_Cantidad : Integer, p_precio : Float) : Void;
			public destroy::Destroy (p_LinPed_OID : OID->LinPed) : Void;
			public readOID::ReadOID (p_LinPed_OID : OID->LinPed) : Object->LinPed;
			public readAll::ReadAll () : List<Object->LinPed>;
		}
	};
	
	Class Tarifa  alias Tarifa 
	{
		attributes
		{
			private oid  id alias idTarifa : Autogenerated;
			private  precio alias precio : Float;
			private  descripcion alias descripcion : String;
			private  nombre alias nombre : String;
		}
		
		operations
		{
			public new::New (p_precio : Float, p_descripcion : String, p_nombre : String) : Object->Tarifa;
			public modify::Modifier (p_Tarifa_OID : OID->Tarifa, p_precio : Float, p_descripcion : String, p_nombre : String) : Void;
			public destroy::Destroy (p_Tarifa_OID : OID->Tarifa) : Void;
			public readOID::ReadOID (p_Tarifa_OID : OID->Tarifa) : Object->Tarifa;
			public readAll::ReadAll () : List<Object->Tarifa>;
		}
	};
	
	Class Devolucion  alias Devolucion 
	{
		attributes
		{
			private oid  id alias idDevolucion : Autogenerated;
			private  descripcion alias descripcion : String;
			private  motivo alias motivo : motivo;
			private  fecha alias fecha : Date;
		}
		
		operations
		{
			public new::New (p_descripcion : String, p_motivo : motivo, p_fecha : Date, p_usuario : OID->Usuario, p_pedido : OID->Pedido) : Object->Devolucion;
			public modify::Modifier (p_Devolucion_OID : OID->Devolucion, p_descripcion : String, p_motivo : motivo, p_fecha : Date) : Void;
			public destroy::Destroy (p_Devolucion_OID : OID->Devolucion) : Void;
			public readOID::ReadOID (p_Devolucion_OID : OID->Devolucion) : Object->Devolucion;
			public readAll::ReadAll () : List<Object->Devolucion>;
		}
	};
	
	Class MetodoPago  alias MetodoPago 
	{
		attributes
		{
			private oid  id alias idMetodoPago : Autogenerated;
		}
		
		operations
		{
			public new::New () : Object->MetodoPago;
			public modify::Modifier (p_MetodoPago_OID : OID->MetodoPago) : Void;
			public destroy::Destroy (p_MetodoPago_OID : OID->MetodoPago) : Void;
			public readOID::ReadOID (p_MetodoPago_OID : OID->MetodoPago) : Object->MetodoPago;
			public readAll::ReadAll () : List<Object->MetodoPago>;
		}
	};
	
	Class Mensaje  alias Mensaje 
	{
		attributes
		{
			private oid  id alias idMensaje : Autogenerated;
			private  fecha alias fecha : Date;
			private  contenido alias contenido : String;
		}
		
		operations
		{
			public new::New (p_fecha : Date, p_contenido : String) : Object->Mensaje;
			public modify::Modifier (p_Mensaje_OID : OID->Mensaje, p_fecha : Date, p_contenido : String) : Void;
			public destroy::Destroy (p_Mensaje_OID : OID->Mensaje) : Void;
			public readOID::ReadOID (p_Mensaje_OID : OID->Mensaje) : Object->Mensaje;
			public readAll::ReadAll () : List<Object->Mensaje>;
		}
	};
	
	Class Valoracion  alias Valoracion 
	{
		attributes
		{
			private oid  id alias idValoracion : Autogenerated;
			private  Puntuacion alias Puntuacion : Float;
			private  Comentario alias Comentario : String;
		}
		
		operations
		{
			public new::New (p_Puntuacion : Float, p_Comentario : String) : Object->Valoracion;
			public modify::Modifier (p_Valoracion_OID : OID->Valoracion, p_Puntuacion : Float, p_Comentario : String) : Void;
			public destroy::Destroy (p_Valoracion_OID : OID->Valoracion) : Void;
			public readOID::ReadOID (p_Valoracion_OID : OID->Valoracion) : Object->Valoracion;
			public readAll::ReadAll () : List<Object->Valoracion>;
		}
	};
	
	Enumeration TipoProd
	{
		("imagen", 1), 
		("audio", 2), 
		("video", 3)
	};
	
	Enumeration Estado
	{
		("enCarrito", 1), 
		("pendiente", 2), 
		("enviado", 3), 
		("cancelado", 4), 
		("enDevolucion", 5), 
		("Devuelto", 6)
	};
	
	Enumeration motivo
	{
		("noRecibido", 1), 
		("malasCondiciones", 2), 
		("otros", 3)
	};
	
	Enumeration TipoUsuario
	{
		("usuario", 1), 
		("artista", 2)
	};
	
	Enumeration TipoPublicacion
	{
		("Publicacion", 1), 
		("Producto", 2)
	};
	
	Association usuario_mensaje ( Mensaje - Usuario ) alias usuario_mensaje
	{
		=> navigable emisor ("0", "*");
		<= navigable mensajeE ("1", "*");
	};
	
	Association usuario_0_mensaje_0 ( Mensaje - Usuario ) alias usuario_0_mensaje_0
	{
		=> navigable receptor ("0", "*");
		<= navigable mensajeR ("1", "*");
	};
	
	Association publicacion_usuario ( Usuario - Publicacion ) alias publicacion_usuario
	{
		=> navigable publicacion ("1", "1");
		<= navigable usuario ("0", "*");
	};
	
	Association usuario_tarifa ( Tarifa - Usuario ) alias usuario_tarifa
	{
		=> navigable usuario ("0", "*");
		<= navigable tarifa ("1", "1");
	};
	
	Association publicacion_valoracion ( Valoracion - Publicacion ) alias publicacion_valoracion
	{
		=> navigable publicacion ("0", "*");
		<= navigable valoracion ("1", "1");
	};
	
	Association usuario_valoracion ( Valoracion - Usuario ) alias usuario_valoracion
	{
		=> navigable usuario ("0", "*");
		<= navigable valoracion ("1", "1");
	};
	
	Association linPed_pedido ( Pedido - LinPed ) alias linPed_pedido
	{
		=> navigable linPed : Composite("0", "*");
		<= navigable pedido ("1", "1");
	};
	
	Association usuario_pedido ( Pedido - Usuario ) alias usuario_pedido
	{
		=> navigable usuario ("1", "1");
		<= navigable pedido ("0", "*");
	};
	
	Association usuario_devolucion ( Devolucion - Usuario ) alias usuario_devolucion
	{
		=> navigable usuario ("1", "1");
		<= navigable devolucion ("0", "*");
	};
	
	Association pedido_devolucion ( Devolucion - Pedido ) alias pedido_devolucion
	{
		=> navigable pedido ("1", "1");
		<= navigable devolucion ("0", "1");
	};
	
	Association publicacion_linPed ( LinPed - Publicacion ) alias publicacion_linPed
	{
		=> navigable publicacion ("1", "1");
		<= navigable linPed ("0", "1");
	};
	
	Association metodoPago_pedido ( Pedido - MetodoPago ) alias metodoPago_pedido
	{
		=> navigable metodoPago ("1", "1");
		<= navigable pedido ("0", "*");
	};
	
	Association usuario_metodoPago ( MetodoPago - Usuario ) alias usuario_metodoPago
	{
		=> navigable usuario ("0", "*");
		<= navigable metodoPago ("0", "*");
	};
	
}

